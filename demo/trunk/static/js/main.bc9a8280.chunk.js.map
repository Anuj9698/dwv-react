{"version":3,"sources":["TagsTable.js","DwvComponent.js","App.js","registerServiceWorker.js","index.js"],"names":["TagsTable","props","handleChangePage","event","page","setState","handleChangeRowsPerPage","rowsPerPage","target","value","state","data","displayData","searchfor","filterList","bind","nextProps","this","search","searchLo","toLowerCase","updatedList","filter","item","key","hasOwnProperty","toString","indexOf","classes","className","container","id","type","searchField","onChange","margin","InputProps","startAdornment","position","table","slice","map","row","group","element","name","component","count","length","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","React","Component","withStyles","theme","flex","spacer","backgroundColor","palette","background","default","marginLeft","dwv","utils","decodeQuery","base","gui","displayProgress","getElement","refreshElement","image","decoderScripts","TransitionUp","direction","DwvComponent","onChangeTool","tool","dwvApp","selectedTool","currentTarget","onReset","onDisplayReset","handleTagsDialogOpen","showDicomTags","handleTagsDialogClose","handleMenuButtonClick","toolMenuAnchorEl","handleMenuClose","handleMenuItemClick","versions","getVersion","react","version","tools","loadProgress","dataLoaded","tags","toolsMenuItems","onClick","variant","color","aria-owns","aria-haspopup","disabled","button","size","iconSmall","anchorEl","open","Boolean","onClose","TransitionComponent","paper","tagsDialog","appBar","aria-label","href","title","app","App","init","self","addEventListener","loaded","getTags","isMonoSliceData","getImage","getNumberOfFrames","spacing","unit","minHeight","maxHeight","minWidth","maxWidth","fontSize","createMuiTheme","typography","useNextVariants","primary","indigo","secondary","pink","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"4zBAkCMA,G,YAEJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAwCRC,iBAAmB,SAACC,EAAOC,GACzB,EAAKC,SAAS,CAAED,UA1CC,EA6CnBE,wBAA0B,SAAAH,GACxB,EAAKE,SAAS,CAAEE,YAAaJ,EAAMK,OAAOC,SA5C1C,EAAKC,MAAQ,CACXC,KAAM,EAAKV,MAAMU,KACjBC,YAAa,EAAKX,MAAMU,KACxBE,UAAW,GACXT,KAAM,EACNG,YAAa,IAIf,EAAKO,WAAa,EAAKA,WAAWC,KAAhB,gBAXD,E,uFAcOC,GACxBC,KAAKZ,SAAS,CACZM,KAAMK,EAAUL,KAChBC,YAAaI,EAAUL,S,iCAIhBR,GACT,IAAIe,EAASf,EAAMK,OAAOC,MACtBU,EAAWD,EAAOE,cAClBC,EAAcJ,KAAKP,MAAMC,KAAKW,QAAQ,SAAUC,GAClD,IAAM,IAAIC,KAAOD,EACf,GAAIA,EAAKE,eAAeD,GAAO,CAC7B,IAAIf,EAAQc,EAAKC,GAIjB,GAHsB,kBAAVf,IACVA,EAAQA,EAAMiB,aAEgC,IAA3CjB,EAAMW,cAAcO,QAAQR,GAC/B,OAAO,EAIb,OAAO,KAETF,KAAKZ,SAAS,CAACQ,UAAWK,EAAQN,YAAaS,M,+BAWvC,IACAO,EAAYX,KAAKhB,MAAjB2B,QADD,EAE+CX,KAAKP,MAAnDE,EAFD,EAECA,YAAaC,EAFd,EAEcA,UAAWN,EAFzB,EAEyBA,YAAaH,EAFtC,EAEsCA,KAE7C,OACE,yBAAKyB,UAAWD,EAAQE,WACtB,kBAAC,IAAD,CACEC,GAAG,SACHC,KAAK,SACLvB,MAAOI,EACPgB,UAAWD,EAAQK,YACnBC,SAAUjB,KAAKH,WACfqB,OAAO,SACPC,WAAY,CACVC,eACE,kBAAC,IAAD,CAAgBC,SAAS,SACvB,kBAAC,IAAD,UAMR,kBAAC,IAAD,CAAOT,UAAWD,EAAQW,OACxB,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,YACA,kBAAC,KAAD,gBAGJ,kBAAC,KAAD,KACC3B,EAAY4B,MAAMpC,EAAOG,EACpBH,EAAOG,EAAcA,GAAakC,KAAK,SAAAlB,GAC3C,OACE,kBAAC,KAAD,CAAUM,UAAWD,EAAQc,IAAKlB,IAAKD,EAAKoB,MAAMpB,EAAKqB,SACrD,kBAAC,KAAD,KAAYrB,EAAKsB,MACjB,kBAAC,KAAD,KAAYtB,EAAKd,aAOzB,kBAAC,KAAD,CACEqC,UAAU,MACVC,MAAOnC,EAAYoC,OACnBzC,YAAaA,EACbH,KAAMA,EACN6C,oBAAqB,CACnB,aAAc,iBAEhBC,oBAAqB,CACnB,aAAc,aAEhBC,aAAclC,KAAKf,iBACnBkD,oBAAqBnC,KAAKX,+B,GAzGZ+C,IAAMC,WAqHfC,yBAvIA,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJA,KAAM,GAERC,OAAQ,CACND,KAAM,YAERf,IAAK,CACH,qBAAsB,CACpBiB,gBAAiBH,EAAMI,QAAQC,WAAWC,UAG9C7B,YAAa,CACX0B,gBAAiB,QACjBI,WAAY,OAyHDR,CAAmBvD,I,6BC3HlCgE,KAAIC,MAAMC,YAAcF,KAAIC,MAAME,KAAKD,YAEvCF,KAAII,IAAIC,gBAAkB,aAE1BL,KAAII,IAAIE,WAAaN,KAAII,IAAID,KAAKG,WAElCN,KAAII,IAAIG,eAAiBP,KAAII,IAAID,KAAKI,eAGtCP,KAAIQ,MAAMC,eAAiB,CACvB,SAAY,+CACZ,gBAAiB,mDACjB,gBAAiB,mDACjB,IAAO,yCAsBX,SAASC,GAAazE,GACpB,OAAO,kBAAC,IAAD,eAAO0E,UAAU,MAAS1E,I,IAG7B2E,G,YAEJ,WAAY3E,GAAQ,IAAD,8BACjB,4CAAMA,KA8HR4E,aAAe,SAAAC,GACR,EAAKpE,MAAMqE,SACd,EAAK1E,SAAS,CAAC2E,aAAcF,IAC7B,EAAKpE,MAAMqE,OAAOF,aAAa,CAACI,cAAe,CAAExE,MAAOqE,OAlIzC,EAsInBI,QAAU,SAAAJ,GACH,EAAKpE,MAAMqE,QACd,EAAKrE,MAAMqE,OAAOI,kBAxIH,EA4InBC,qBAAuB,WACrB,EAAK/E,SAAS,CAAEgF,eAAe,KA7Id,EAgJnBC,sBAAwB,WACtB,EAAKjF,SAAS,CAAEgF,eAAe,KAjJd,EAoJnBE,sBAAwB,SAAApF,GACtB,EAAKE,SAAS,CAAEmF,iBAAkBrF,EAAM8E,iBArJvB,EAwJnBQ,gBAAkB,SAAAtF,GAChB,EAAKE,SAAS,CAAEmF,iBAAkB,QAzJjB,EA4JnBE,oBAAsB,SAAAZ,GACpB,EAAKzE,SAAS,CAAEmF,iBAAkB,OAClC,EAAKX,aAAaC,IA5JlB,EAAKpE,MAAQ,CACXiF,SAAU,CACR3B,IAAKA,KAAI4B,aACTC,MAAOxC,IAAMyC,SAEfC,MAAO,CAAC,SAAU,aAAc,cAAe,QAC/Cf,aAAc,cACdgB,aAAc,EACdC,YAAY,EACZlB,OAAQ,KACRmB,KAAM,GACNb,eAAe,EACfG,iBAAkB,MAdH,E,sEAkBT,IAAD,OACC5D,EAAYX,KAAKhB,MAAjB2B,QADD,EAEuEX,KAAKP,MAA3EiF,EAFD,EAECA,SAAUI,EAFX,EAEWA,MAAOC,EAFlB,EAEkBA,aAAcC,EAFhC,EAEgCA,WAAYC,EAF5C,EAE4CA,KAAMV,EAFlD,EAEkDA,iBAEnDW,EAAiBJ,EAAMtD,KAAK,SAACqC,GAAD,OAChC,kBAAC,IAAD,CAAUsB,QAAS,EAAKV,oBAAoB3E,KAAK,EAAM+D,GAAOtD,IAAKsD,EAAMrE,MAAOqE,GAAOA,MAGzF,OACE,yBAAK/C,GAAG,OACN,kBAAC,IAAD,CAAgBsE,QAAQ,cAAc5F,MAAOuF,IAC7C,yBAAKnE,UAAU,cACb,kBAAC,IAAD,CAAQwE,QAAQ,YAAYC,MAAM,UAChCC,YAAWf,EAAmB,cAAgB,KAC9CgB,gBAAc,OACdJ,QAASnF,KAAKsE,sBACdkB,UAAWR,EACXpE,UAAWD,EAAQ8E,OACnBC,KAAK,UACJ1F,KAAKP,MAAMsE,aACd,kBAAC,IAAD,CAAmBnD,UAAWD,EAAQgF,aACtC,kBAAC,IAAD,CACE7E,GAAG,cACH8E,SAAUrB,EACVsB,KAAMC,QAAQvB,GACdwB,QAAS/F,KAAKwE,iBAEbU,GAGH,kBAAC,IAAD,CAAQE,QAAQ,YAAYC,MAAM,UAChCG,UAAWR,EACXG,QAASnF,KAAKiE,SAFhB,SAKA,kBAAC,IAAD,CAAQmB,QAAQ,YAAYC,MAAM,UAChCF,QAASnF,KAAKmE,qBACdqB,UAAWR,EACXpE,UAAWD,EAAQ8E,OACnBC,KAAK,UAJP,QAKA,kBAAC,IAAD,CACEG,KAAM7F,KAAKP,MAAM2E,cACjB2B,QAAS/F,KAAKqE,sBACd2B,oBAAqBvC,GACrB9C,QAAS,CAAEsF,MAAOtF,EAAQuF,aAExB,kBAAC,IAAD,CAAQtF,UAAWD,EAAQwF,QACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYd,MAAM,UAAUF,QAASnF,KAAKqE,sBAAuB+B,aAAW,SAC1E,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAYhB,QAAQ,KAAKC,MAAM,UAAUzE,UAAWD,EAAQ6B,MAA5D,gBAKJ,kBAAC,GAAD,CAAW9C,KAAMuF,MAIvB,yBAAKrE,UAAU,kBACb,yBAAKA,UAAU,WAAU,kBAAC,IAAD,kCACzB,4BAAQA,UAAU,cAAlB,yCACA,yBAAKA,UAAU,aAGjB,6BAAK,uBAAGA,UAAU,UAChB,kBAAC,IAAD,CAAYwE,QAAQ,WAApB,cAAyC,kBAAC,IAAD,CACrCiB,KAAK,kCACLC,MAAM,iBAF+B,OAAzC,IAGW5B,EAAS3B,IAHpB,cAGoC2B,EAASE,Y,0CAUnD,IAAI2B,EAAM,IAAIxD,KAAIyD,IAElBD,EAAIE,KAAK,CACP,eAAkB,MAClB,MAASzG,KAAKP,MAAMqF,MACpB,OAAU,CAAC,SACX,UAAY,IAGd,IAAI4B,EAAO1G,KACXuG,EAAII,iBAAiB,iBAAiB,SAAUzH,GAC9CwH,EAAKtH,SAAS,CAAC2F,aAAc7F,EAAM0H,YAErCL,EAAII,iBAAiB,YAAY,SAAUzH,GAEzCwH,EAAKtH,SAAS,CAAC4F,YAAY,IAE3B0B,EAAKtH,SAAS,CAAC6F,KAAMsB,EAAIM,YAErBN,EAAIO,mBAA4D,IAAvCP,EAAIQ,WAAWC,oBAC1CN,EAAKtH,SAAS,CAAC2E,aAAc,eAE7B2C,EAAKtH,SAAS,CAAC2E,aAAc,cAIjC/D,KAAKZ,SAAS,CAAC0E,OAAQyC,Q,GA9HAnE,IAAMC,WAyKlBC,yBAhMA,SAAAC,GAAK,MAAK,CACvBkD,OAAQ,CACNvE,OAAQqB,EAAM0E,QAAQC,MAExBf,OAAQ,CACN9E,SAAU,YAEZiF,MAAO,CACL9D,KAAM,YAER0D,WAAY,CACViB,UAAW,OAAQC,UAAW,OAC9BC,SAAU,OAAQC,SAAU,QAE9B3B,UAAW,CACT4B,SAAU,OAiLCjF,CAAmBqB,IClO5BpB,GAAQiF,yBAAe,CAC3BC,WAAY,CACVC,iBAAiB,GAEnB/E,QAAS,CACPgF,QAASC,IACTC,UAAWC,IACX/G,KAAM,WAiBKyF,G,iLAXX,OACE,kBAAC,mBAAD,CAAkBjE,MAAOA,IACvB,kBAAC,IAAD,MACA,yBAAK3B,UAAU,OACb,kBAAC,GAAD,Y,GANQyB,aCXZ0F,GAAcjC,QACW,cAA7BkC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnJ,QACf6I,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,MCzEjEC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBjB,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,wBAAwBzB,OAAOC,UAC3CyB,SAAW1B,OAAOC,SAASyB,OAIvC,OAGF1B,OAAOrB,iBAAiB,QAAQ,WAC9B,IAAM0B,EAAK,UAAMoB,wBAAN,sBAEP1B,KAiDV,SAAiCM,GAE/BsB,MAAMtB,GACHI,MAAK,SAAAmB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBrJ,QAAQ,cAG7C4H,UAAUC,cAAcyB,MAAMvB,MAAK,SAAAC,GACjCA,EAAauB,aAAaxB,MAAK,WAC7BT,OAAOC,SAASiC,eAKpB9B,GAAgBC,MAGnBa,OAAM,WACLF,QAAQC,IACN,oEArEAkB,CAAwB9B,GAIxBC,UAAUC,cAAcyB,MAAMvB,MAAK,WACjCO,QAAQC,IACN,gHAMJb,GAAgBC,OCzCxB+B,K","file":"static/js/main.bc9a8280.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\n\nimport Search from '@material-ui/icons/Search';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nconst styles = theme => ({\n  flex: {\n    flex: 1,\n  },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n  searchField: {\n    backgroundColor: 'white',\n    marginLeft: 20\n  }\n});\n\nclass TagsTable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.data,\n      displayData: this.props.data,\n      searchfor: \"\",\n      page: 0,\n      rowsPerPage: 10\n    };\n\n    // bind listener\n    this.filterList = this.filterList.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      data: nextProps.data,\n      displayData: nextProps.data\n    });\n  }\n\n  filterList(event) {\n    var search = event.target.value\n    var searchLo = search.toLowerCase();\n    var updatedList = this.state.data.filter( function (item) {\n      for ( var key in item ) {\n        if( item.hasOwnProperty(key) ) {\n          var value = item[key];\n          if ( typeof value === \"number\" ) {\n            value = value.toString();\n          }\n          if ( value.toLowerCase().indexOf(searchLo) !== -1 ) {\n            return true;\n          }\n        }\n      }\n      return false;\n    });\n    this.setState({searchfor: search, displayData: updatedList});\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  }\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { displayData, searchfor, rowsPerPage, page } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <TextField\n          id=\"search\"\n          type=\"search\"\n          value={searchfor}\n          className={classes.searchField}\n          onChange={this.filterList}\n          margin=\"normal\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Search />\n              </InputAdornment>\n            )\n          }}\n        />\n\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Tag</TableCell>\n              <TableCell>Value</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {displayData.slice(page * rowsPerPage,\n                page * rowsPerPage + rowsPerPage).map( item => {\n            return (\n              <TableRow className={classes.row} key={item.group+item.element}>\n                <TableCell>{item.name}</TableCell>\n                <TableCell>{item.value}</TableCell>\n              </TableRow>\n            );\n          })}\n          </TableBody>\n        </Table>\n\n        <TablePagination\n          component=\"div\"\n          count={displayData.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n\n      </div>\n    );\n  }\n}\n\nTagsTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TagsTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Link from '@material-ui/core/Link';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Slide from '@material-ui/core/Slide';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport TagsTable from './TagsTable';\n\nimport './DwvComponent.css';\nimport dwv from 'dwv';\n\n// gui overrides\n\n// decode query\ndwv.utils.decodeQuery = dwv.utils.base.decodeQuery;\n// progress\ndwv.gui.displayProgress = function () {};\n// get element\ndwv.gui.getElement = dwv.gui.base.getElement;\n// refresh element\ndwv.gui.refreshElement = dwv.gui.base.refreshElement;\n\n// Image decoders (for web workers)\ndwv.image.decoderScripts = {\n    \"jpeg2000\": \"assets/dwv/decoders/pdfjs/decode-jpeg2000.js\",\n    \"jpeg-lossless\": \"assets/dwv/decoders/rii-mango/decode-jpegloss.js\",\n    \"jpeg-baseline\": \"assets/dwv/decoders/pdfjs/decode-jpegbaseline.js\",\n    \"rle\": \"assets/dwv/decoders/dwv/decode-rle.js\"\n};\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n  tagsDialog: {\n    minHeight: '90vh', maxHeight: '90vh',\n    minWidth: '90vw', maxWidth: '90vw',\n  },\n  iconSmall: {\n    fontSize: 20,\n  }\n});\n\nfunction TransitionUp(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass DwvComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      versions: {\n        dwv: dwv.getVersion(),\n        react: React.version\n      },\n      tools: ['Scroll', 'ZoomAndPan', 'WindowLevel', 'Draw'],\n      selectedTool: 'Select Tool',\n      loadProgress: 0,\n      dataLoaded: false,\n      dwvApp: null,\n      tags: [],\n      showDicomTags: false,\n      toolMenuAnchorEl: null\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { versions, tools, loadProgress, dataLoaded, tags, toolMenuAnchorEl } = this.state;\n\n    const toolsMenuItems = tools.map( (tool) =>\n      <MenuItem onClick={this.handleMenuItemClick.bind(this, tool)} key={tool} value={tool}>{tool}</MenuItem>\n    );\n\n    return (\n      <div id=\"dwv\">\n        <LinearProgress variant=\"determinate\" value={loadProgress} />\n        <div className=\"button-row\">\n          <Button variant=\"contained\" color=\"primary\"\n            aria-owns={toolMenuAnchorEl ? 'simple-menu' : null}\n            aria-haspopup=\"true\"\n            onClick={this.handleMenuButtonClick}\n            disabled={!dataLoaded}\n            className={classes.button}\n            size=\"medium\"\n          >{ this.state.selectedTool }\n          <ArrowDropDownIcon className={classes.iconSmall}/></Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={toolMenuAnchorEl}\n            open={Boolean(toolMenuAnchorEl)}\n            onClose={this.handleMenuClose}\n          >\n            {toolsMenuItems}\n          </Menu>\n\n          <Button variant=\"contained\" color=\"primary\"\n            disabled={!dataLoaded}\n            onClick={this.onReset}\n          >Reset</Button>\n\n          <Button variant=\"contained\" color=\"primary\"\n            onClick={this.handleTagsDialogOpen}\n            disabled={!dataLoaded}\n            className={classes.button}\n            size=\"medium\">Tags</Button>\n          <Dialog\n            open={this.state.showDicomTags}\n            onClose={this.handleTagsDialogClose}\n            TransitionComponent={TransitionUp}\n            classes={{ paper: classes.tagsDialog }}\n            >\n              <AppBar className={classes.appBar}>\n                <Toolbar>\n                  <IconButton color=\"inherit\" onClick={this.handleTagsDialogClose} aria-label=\"Close\">\n                    <CloseIcon />\n                  </IconButton>\n                  <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                    DICOM Tags\n                  </Typography>\n                </Toolbar>\n              </AppBar>\n              <TagsTable data={tags} />\n          </Dialog>\n        </div>\n\n        <div className=\"layerContainer\">\n          <div className=\"dropBox\"><Typography>Drag and drop data here.</Typography></div>\n          <canvas className=\"imageLayer\">Only for HTML5 compatible browsers...</canvas>\n          <div className=\"drawDiv\"></div>\n        </div>\n\n        <div><p className=\"legend\">\n          <Typography variant=\"caption\">Powered by <Link\n              href=\"https://github.com/ivmartel/dwv\"\n              title=\"dwv on github\">dwv\n            </Link> {versions.dwv} and React {versions.react}\n          </Typography>\n        </p></div>\n\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    // create app\n    var app = new dwv.App();\n    // initialise app\n    app.init({\n      \"containerDivId\": \"dwv\",\n      \"tools\": this.state.tools,\n      \"shapes\": [\"Ruler\"],\n      \"isMobile\": true\n    });\n    // progress\n    var self = this;\n    app.addEventListener(\"load-progress\", function (event) {\n      self.setState({loadProgress: event.loaded});\n    });\n    app.addEventListener(\"load-end\", function (event) {\n      // set data loaded flag\n      self.setState({dataLoaded: true});\n      // set dicom tags\n      self.setState({tags: app.getTags()});\n      // set the selected tool\n      if (app.isMonoSliceData() && app.getImage().getNumberOfFrames() === 1) {\n        self.setState({selectedTool: 'ZoomAndPan'});\n      } else {\n        self.setState({selectedTool: 'Scroll'});\n      }\n    });\n    // store\n    this.setState({dwvApp: app});\n  }\n\n  onChangeTool = tool => {\n    if ( this.state.dwvApp ) {\n      this.setState({selectedTool: tool});\n      this.state.dwvApp.onChangeTool({currentTarget: { value: tool } });\n    }\n  }\n\n  onReset = tool => {\n    if ( this.state.dwvApp ) {\n      this.state.dwvApp.onDisplayReset();\n    }\n  }\n\n  handleTagsDialogOpen = () => {\n    this.setState({ showDicomTags: true });\n  };\n\n  handleTagsDialogClose = () => {\n    this.setState({ showDicomTags: false });\n  };\n\n  handleMenuButtonClick = event => {\n    this.setState({ toolMenuAnchorEl: event.currentTarget });\n  };\n\n  handleMenuClose = event => {\n    this.setState({ toolMenuAnchorEl: null });\n  };\n\n  handleMenuItemClick = tool => {\n    this.setState({ toolMenuAnchorEl: null });\n    this.onChangeTool(tool);\n  };\n\n}\n\nDwvComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DwvComponent);\n","import React, { Component } from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport indigo from '@material-ui/core/colors/indigo';\nimport pink from '@material-ui/core/colors/pink';\n\nimport './App.css';\nimport DwvComponent from './DwvComponent';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: indigo,\n    secondary: pink,\n    type: 'light'\n  }\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <div className=\"App\">\n          <DwvComponent />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}