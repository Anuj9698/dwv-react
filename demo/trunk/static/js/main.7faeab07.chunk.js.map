{"version":3,"sources":["TagsTable.js","DwvComponent.js","App.js","registerServiceWorker.js","index.js"],"names":["TagsTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangePage","event","page","setState","handleChangeRowsPerPage","rowsPerPage","target","value","state","data","displayData","searchfor","filterList","bind","assertThisInitialized","nextProps","search","searchLo","toLowerCase","updatedList","filter","item","key","hasOwnProperty","toString","indexOf","classes","_this$state","react_default","a","createElement","className","container","TextField_default","id","type","searchField","onChange","margin","InputProps","startAdornment","InputAdornment_default","position","Search_default","Table_default","table","TableHead_default","TableRow_default","TableCell_default","TableBody_default","slice","map","row","group","element","name","numeric","TablePagination_default","component","count","length","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","onChangeRowsPerPage","React","Component","withStyles","theme","flex","spacer","&:nth-of-type(odd)","backgroundColor","palette","background","default","marginLeft","dwv","utils","decodeQuery","base","gui","displayProgress","getElement","refreshElement","image","decoderScripts","jpeg2000","jpeg-lossless","jpeg-baseline","TransitionUp","Slide_default","assign","direction","DwvComponent","onChangeTool","tool","dwvApp","selectedTool","currentTarget","onReset","onDisplayReset","handleTagsDialogOpen","showDicomTags","handleTagsDialogClose","handleMenuButtonClick","toolMenuAnchorEl","handleMenuClose","handleMenuItemClick","versions","getVersion","react","version","tools","loadProgress","dataLoaded","tags","_this2","toolsMenuItems","MenuItem_default","onClick","LinearProgress_default","variant","Button_default","color","aria-owns","aria-haspopup","disabled","button","size","ArrowDropDown_default","iconSmall","Menu_default","anchorEl","open","Boolean","onClose","Dialog_default","TransitionComponent","paper","tagsDialog","AppBar_default","appBar","Toolbar_default","IconButton_default","Close_default","Typography_default","src_TagsTable","href","title","app","App","init","containerDivId","shapes","isMobile","self","addEventListener","loaded","getTags","isMonoSliceData","getImage","getNumberOfFrames","spacing","unit","minHeight","maxHeight","minWidth","maxWidth","fontSize","src_DwvComponent_0","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","concat","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7faeab07.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\n\nimport Search from '@material-ui/icons/Search';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nconst styles = theme => ({\n  flex: {\n    flex: 1,\n  },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n  searchField: {\n    backgroundColor: 'white',\n    marginLeft: 20\n  }\n});\n\nclass TagsTable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.data,\n      displayData: this.props.data,\n      searchfor: \"\",\n      page: 0,\n      rowsPerPage: 10\n    };\n\n    // bind listener\n    this.filterList = this.filterList.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      data: nextProps.data,\n      displayData: nextProps.data\n    });\n  }\n\n  filterList(event) {\n    var search = event.target.value\n    var searchLo = search.toLowerCase();\n    var updatedList = this.state.data.filter( function (item) {\n      for ( var key in item ) {\n        if( item.hasOwnProperty(key) ) {\n          var value = item[key];\n          if ( typeof value === \"number\" ) {\n            value = value.toString();\n          }\n          if ( value.toLowerCase().indexOf(searchLo) !== -1 ) {\n            return true;\n          }\n        }\n      }\n      return false;\n    });\n    this.setState({searchfor: search, displayData: updatedList});\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  }\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { displayData, searchfor, rowsPerPage, page } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <TextField\n          id=\"search\"\n          type=\"search\"\n          value={searchfor}\n          className={classes.searchField}\n          onChange={this.filterList}\n          margin=\"normal\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Search />\n              </InputAdornment>\n            )\n          }}\n        />\n\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Tag</TableCell>\n              <TableCell>Value</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {displayData.slice(page * rowsPerPage,\n                page * rowsPerPage + rowsPerPage).map( item => {\n            return (\n              <TableRow className={classes.row} key={item.group+item.element}>\n                <TableCell>{item.name}</TableCell>\n                <TableCell numeric>{item.value}</TableCell>\n              </TableRow>\n            );\n          })}\n          </TableBody>\n        </Table>\n\n        <TablePagination\n          component=\"div\"\n          count={displayData.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n\n      </div>\n    );\n  }\n}\n\nTagsTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TagsTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Slide from '@material-ui/core/Slide';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport TagsTable from './TagsTable';\n\nimport './DwvComponent.css';\nimport dwv from 'dwv';\n\n// gui overrides\n\n// decode query\ndwv.utils.decodeQuery = dwv.utils.base.decodeQuery;\n// progress\ndwv.gui.displayProgress = function () {};\n// get element\ndwv.gui.getElement = dwv.gui.base.getElement;\n// refresh element\ndwv.gui.refreshElement = dwv.gui.base.refreshElement;\n\n// Image decoders (for web workers)\ndwv.image.decoderScripts = {\n    \"jpeg2000\": \"assets/dwv/decoders/pdfjs/decode-jpeg2000.js\",\n    \"jpeg-lossless\": \"assets/dwv/decoders/rii-mango/decode-jpegloss.js\",\n    \"jpeg-baseline\": \"assets/dwv/decoders/pdfjs/decode-jpegbaseline.js\"\n};\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n  tagsDialog: {\n    minHeight: '90vh', maxHeight: '90vh',\n    minWidth: '90vw', maxWidth: '90vw',\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n});\n\nfunction TransitionUp(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass DwvComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      versions: {\n        dwv: dwv.getVersion(),\n        react: React.version\n      },\n      tools: ['Scroll', 'ZoomAndPan', 'WindowLevel', 'Draw'],\n      selectedTool: 'Select Tool',\n      loadProgress: 0,\n      dataLoaded: false,\n      dwvApp: null,\n      tags: [],\n      showDicomTags: false,\n      toolMenuAnchorEl: null\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { versions, tools, loadProgress, dataLoaded, tags, toolMenuAnchorEl } = this.state;\n\n    const toolsMenuItems = tools.map( (tool) =>\n      <MenuItem onClick={this.handleMenuItemClick.bind(this, tool)} key={tool} value={tool}>{tool}</MenuItem>\n    );\n\n    return (\n      <div id=\"dwv\">\n        <LinearProgress variant=\"determinate\" value={loadProgress} />\n        <div className=\"button-row\">\n          <Button variant=\"contained\" color=\"primary\"\n            aria-owns={toolMenuAnchorEl ? 'simple-menu' : null}\n            aria-haspopup=\"true\"\n            onClick={this.handleMenuButtonClick}\n            disabled={!dataLoaded}\n            className={classes.button}\n            size=\"medium\"\n          >{ this.state.selectedTool }\n          <ArrowDropDownIcon className={classes.iconSmall}/></Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={toolMenuAnchorEl}\n            open={Boolean(toolMenuAnchorEl)}\n            onClose={this.handleMenuClose}\n          >\n            {toolsMenuItems}\n          </Menu>\n\n          <Button variant=\"contained\" color=\"primary\"\n            disabled={!dataLoaded}\n            onClick={this.onReset}\n          >Reset</Button>\n\n          <Button variant=\"contained\" color=\"primary\"\n            onClick={this.handleTagsDialogOpen}\n            disabled={!dataLoaded}\n            className={classes.button}\n            size=\"medium\">Tags</Button>\n          <Dialog\n            open={this.state.showDicomTags}\n            onClose={this.handleTagsDialogClose}\n            TransitionComponent={TransitionUp}\n            classes={{ paper: classes.tagsDialog }}\n            >\n              <AppBar className={classes.appBar}>\n                <Toolbar>\n                  <IconButton color=\"inherit\" onClick={this.handleTagsDialogClose} aria-label=\"Close\">\n                    <CloseIcon />\n                  </IconButton>\n                  <Typography variant=\"title\" color=\"inherit\" className={classes.flex}>\n                    DICOM Tags\n                  </Typography>\n                </Toolbar>\n              </AppBar>\n              <TagsTable data={tags} />\n          </Dialog>\n        </div>\n\n        <div className=\"layerContainer\">\n          <div className=\"dropBox\">Drag and drop data here.</div>\n          <canvas className=\"imageLayer\">Only for HTML5 compatible browsers...</canvas>\n          <div className=\"drawDiv\"></div>\n        </div>\n        <div className=\"legend\"><p>Powered by <a\n          href=\"https://github.com/ivmartel/dwv\"\n          title=\"dwv on github\">dwv\n        </a> {versions.dwv} and React {versions.react}\n        </p></div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    // create app\n    var app = new dwv.App();\n    // initialise app\n    app.init({\n      \"containerDivId\": \"dwv\",\n      \"tools\": this.state.tools,\n      \"shapes\": [\"Ruler\"],\n      \"isMobile\": true\n    });\n    // progress\n    var self = this;\n    app.addEventListener(\"load-progress\", function (event) {\n      self.setState({loadProgress: event.loaded});\n    });\n    app.addEventListener(\"load-end\", function (event) {\n      // set data loaded flag\n      self.setState({dataLoaded: true});\n      // set dicom tags\n      self.setState({tags: app.getTags()});\n      // set the selected tool\n      if (app.isMonoSliceData() && app.getImage().getNumberOfFrames() === 1) {\n        self.setState({selectedTool: 'ZoomAndPan'});\n      } else {\n        self.setState({selectedTool: 'Scroll'});\n      }\n    });\n    // store\n    this.setState({dwvApp: app});\n  }\n\n  onChangeTool = tool => {\n    if ( this.state.dwvApp ) {\n      this.setState({selectedTool: tool});\n      this.state.dwvApp.onChangeTool({currentTarget: { value: tool } });\n    }\n  }\n\n  onReset = tool => {\n    if ( this.state.dwvApp ) {\n      this.state.dwvApp.onDisplayReset();\n    }\n  }\n\n  handleTagsDialogOpen = () => {\n    this.setState({ showDicomTags: true });\n  };\n\n  handleTagsDialogClose = () => {\n    this.setState({ showDicomTags: false });\n  };\n\n  handleMenuButtonClick = event => {\n    this.setState({ toolMenuAnchorEl: event.currentTarget });\n  };\n\n  handleMenuClose = event => {\n    this.setState({ toolMenuAnchorEl: null });\n  };\n\n  handleMenuItemClick = tool => {\n    this.setState({ toolMenuAnchorEl: null });\n    this.onChangeTool(tool);\n  };\n\n}\n\nDwvComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DwvComponent);\n","import React, { Component } from 'react';\nimport './App.css';\nimport DwvComponent from './DwvComponent';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <DwvComponent />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}